
paths:
  /api/carts:
    get:
      summary: Retorna la lista completa de carritos
      tags:
        - Carritos
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carts'
        "500":
          description: 'ERROR'

    post:
      summary: Recibe un body para crear un carrito
      tags:
        - Carritos
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Carts'
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carts'
        "500":
          description: 'ERROR'


  /api/carts/{cid}:

    get:

      summary: Retorna los detalles del carrito especificado
      tags:
        - Carritos

      parameters:
        - name: cid
          in: path
          required: false
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carts'
        "500":
          description: 'ERROR'
    

  /api/cartdelete/{cid}:

    delete:
      summary: Borra el carrito con el id indicado
      tags:
        - Carritos
      parameters:
        - name: cid
          in: path
          required: true
          description: Mongoose ObjectID
      responses:
        "200":
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Carts'
        "500":
          description: 'ERROR'

  #   put:
  #     summary: Recibe un body para modificar un producto
  #     tags:
  #       - Productos
  #     parameters:
  #       - name: pid
  #         in: path
  #         required: true
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/requestBodies/Products'
  #           example:
  #             Title: "Ejemplo de Producto"
  #             Description: "Descripción de ejemplo"
  #             Code: 12345
  #             Price: 99.99
  #             Status: true
  #             Stock: 10
  #             Category: "Ejemplo de Categoría"
  #             Thumbnail: []
  #     responses:
  #       "200":
  #         description: 'OK'
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Products'
  #       "500":
  #         description: 'ERROR'
    
  #   delete:
  #     summary: Borra el prodcuto con el id indicado
  #     tags:
  #       - Productos
  #     parameters:
  #       - name: pid
  #         in: path
  #         required: true
  #         description: Mongoose ObjectID
  #     responses:
  #       "200":
  #         description: 'OK'
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Products'
  #       "500":
  #         description: 'ERROR'

  # /api/productsowned:

  #   get:
  #     summary: Retorna la lista de Productos de un usuario Premium
  #     tags:
  #       - Productos
  #     responses:
  #       "200":
  #         description: 'OK'
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/Products'
  #       "500":
  #         description: 'ERROR'
    
components:
  schemas:
    Carts:
      type: object
      properties:
        _id:
          type: object
          description: Mongoose ObjectID
        products:
          type: array

  # requestBodies:
  #   Products:
  #     type: object
  #     properties:
  #       Title:
  #         type: string
  #       Description:
  #         type: string
  #       Code:
  #         type: number
  #       Price:
  #         type: number
  #       Status:
  #         type: Boolean
  #       Stock:
  #         type: number
  #       Category:
  #         type: string
  #       Thumbnail:
  #         type: array